<Window x:Class="Fizzi.Applications.Splitter.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:lview="clr-namespace:Fizzi.Applications.Splitter.View"
        xmlns:lvm="clr-namespace:Fizzi.Applications.Splitter.ViewModel"
        xmlns:p="clr-namespace:Fizzi.Applications.Splitter.Properties"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        x:Name="MainWindowName" Height="400" Width="250"
        MinHeight="50" MinWidth="50"
        WindowStyle="None" AllowsTransparency="{Binding Source={x:Static p:Settings.Default}, Path=AllowsTransparency, Mode=OneTime}"
        MouseDown="Window_MouseDown" Title="Fizzi's Split Timer">
    <Window.DataContext>
        <lvm:MainViewModel />
    </Window.DataContext>
    <Window.Style>
        <Style TargetType="Window">
            <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsResizing}" Value="False">
                    <Setter Property="ResizeMode" Value="NoResize" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <Window.Resources>
        <SolidColorBrush x:Key="BackgroundBrush" Color="#303030" />
        <SolidColorBrush x:Key="CurrentSplitBackgroundBrush" Color="#303030" />
        
        <Style x:Key="MainText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.DefaultPanel.TextColor, FallbackValue=White}" />
            <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.MainFont.Size, FallbackValue=14}" />
            <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.MainFont.Family, FallbackValue=Calibri}" />
        </Style>

        <Style x:Key="HeaderText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="{Binding DisplaySettingsViewModel.SelectedDisplayTemplate.HeaderFont.Size, FallbackValue=14}" />
            <Setter Property="FontFamily" Value="{Binding DisplaySettingsViewModel.SelectedDisplayTemplate.HeaderFont.Family, FallbackValue=Calibri}" />
        </Style>

        <Style x:Key="TimerText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="{Binding DisplaySettingsViewModel.SelectedDisplayTemplate.TimerFont.Size, FallbackValue=40}" />
            <Setter Property="FontFamily" Value="{Binding DisplaySettingsViewModel.SelectedDisplayTemplate.TimerFont.Family, FallbackValue=Calibri}" />
        </Style>
        
        <Style x:Key="BorderStyle" TargetType="Border">
            <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.DefaultPanel.BorderThickness, FallbackValue=2}" />
            <Setter Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.DefaultPanel.BorderCornerRadius, FallbackValue=0}" />
            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.DefaultPanel.BorderColor, FallbackValue=White}" />
            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.DefaultPanel.BackgroundColor, FallbackValue=#303030}" />
            <Setter Property="SnapsToDevicePixels" Value="true" />
        </Style>

        <Style x:Key="DisabledWhenNoFile" TargetType="MenuItem">
            <Style.Triggers>
                <DataTrigger Binding="{Binding CurrentFile}" Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DisabledWhenNoFileOrRunStarted" TargetType="MenuItem" BasedOn="{StaticResource DisabledWhenNoFile}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsCurrentRunStarted}" Value="true">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DisabledWhenRunStarted" TargetType="MenuItem">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsCurrentRunStarted}" Value="true">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <BooleanToVisibilityConverter x:Key="BoolToVisConv" />
        <lview:ObjectEqualityConverter x:Key="ObjectEqualityConv" />
    </Window.Resources>
    <Grid>
        <!-- Main Grid -->
        <Grid Background="{Binding DisplaySettingsViewModel.SelectedDisplayTemplate.BackgroundColor}">
            <Grid.ContextMenu>
                <ContextMenu>
                    <ContextMenu.Style>
                        <Style TargetType="ContextMenu">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsResizing}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContextMenu.Style>
                    <MenuItem Header="New" Command="{Binding CreateNewFileCommand}" Style="{StaticResource DisabledWhenRunStarted}" />
                    <MenuItem Header="Open..." Command="{Binding OpenFileCommand}" />
                    <MenuItem Header="Import">
                        <MenuItem Header="WSplit" Command="{Binding ImportFromWsplitCommand}" />
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Edit Splits..." Style="{StaticResource DisabledWhenNoFileOrRunStarted}" Click="EditMenuItem_Click" />
                    <Separator />
                    <MenuItem Header="Save" Command="{Binding SaveSplits}" Style="{StaticResource DisabledWhenNoFile}" />
                    <MenuItem Header="Save As..." Command="{Binding SaveSplitsAs}" Style="{StaticResource DisabledWhenNoFile}" />
                    <Separator />
                    <MenuItem Header="Show Gold Times" IsCheckable="True" IsChecked="{Binding ShowGoldSplits}" />
                    <Separator />
                    <MenuItem Header="Application Settings..." Click="SettingsMenuItem_Click" />
                    <MenuItem Header="Display Settings..." Click="DisplaySettingsMenuItem_Click" />
                    <Separator />
                    <MenuItem Header="Exit" Click="ExitMenuItem_Click" />
                </ContextMenu>
            </Grid.ContextMenu>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!--RenderOptions.ClearTypeHint="Enabled" TextOptions.TextFormattingMode="Display" RenderOptions.BitmapScalingMode="NearestNeighbor"-->

            <Border Grid.Row="0" Margin="6,6,6,5" Style="{StaticResource BorderStyle}" 
                    BorderThickness="{Binding DisplaySettingsViewModel.SelectedDisplayTemplate.HeaderPanel.BorderThickness}"
                    CornerRadius="{Binding DisplaySettingsViewModel.SelectedDisplayTemplate.HeaderPanel.BorderCornerRadius}"
                    BorderBrush="{Binding DisplaySettingsViewModel.SelectedDisplayTemplate.HeaderPanel.BorderColor}"
                    Background="{Binding DisplaySettingsViewModel.SelectedDisplayTemplate.HeaderPanel.BackgroundColor}">
                <StackPanel>
                    <TextBlock Margin="3,1" HorizontalAlignment="Center" TextAlignment="Center" VerticalAlignment="Center"
                               Text="{Binding CurrentFile.Header, FallbackValue=[File Not Loaded]}" Style="{StaticResource HeaderText}"
                               Foreground="{Binding DisplaySettingsViewModel.SelectedDisplayTemplate.HeaderPanel.TextColor}" />
                    <!--<TextBlock Margin="3,1" HorizontalAlignment="Center" TextAlignment="Center" VerticalAlignment="Center"
                           Text="{Binding CurrentFile.PersonalBestDate, FallbackValue=N/A}" FontSize="14" FontFamily="PF Arma Five" />-->
                </StackPanel>
            </Border>

            <lview:SplitViewer Grid.Row="1" Splits="{Binding SplitRows}" CurrentSplit="{Binding CurrentSplitRow}" IsHitTestVisible="False" Grid.IsSharedSizeScope="True">
                <lview:SplitViewer.SplitTemplate>
                    <DataTemplate>
                        <Grid Margin="5,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="GoldSplitColumn" />
                            </Grid.ColumnDefinitions>

                            <Border Grid.Column="0" Margin="1">
                                <Border.Style>
                                    <Style TargetType="Border" BasedOn="{StaticResource BorderStyle}">
                                        <Style.Triggers>
                                            <DataTrigger Value="True">
                                                <DataTrigger.Binding>
                                                    <MultiBinding Converter="{StaticResource ObjectEqualityConv}">
                                                        <Binding />
                                                        <Binding RelativeSource="{RelativeSource AncestorType=Window, Mode=FindAncestor}" Path="DataContext.CurrentSplitRow" />
                                                    </MultiBinding>
                                                </DataTrigger.Binding>

                                                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.CurrentSplitPanel.BorderColor, FallbackValue=White}" />
                                                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.CurrentSplitPanel.BackgroundColor, FallbackValue=#303030}" />
                                                <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.CurrentSplitPanel.BorderThickness, FallbackValue=2}" />
                                                <Setter Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.CurrentSplitPanel.BorderCornerRadius, FallbackValue=4}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsNewGoldSplit}" Value="True">
                                                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.GoldPanel.BorderColor, FallbackValue=White}" />
                                                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.GoldPanel.BackgroundColor, FallbackValue=#303030}" />
                                                <!--<Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.GoldPanel.BorderThickness, FallbackValue=2}" />
                                                <Setter Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.GoldPanel.BorderCornerRadius, FallbackValue=0}" />-->
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsNewGoldSplit}" Value="False" />
                                                    <Condition Binding="{Binding IsAheadOfPb}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.AheadPanel.BorderColor, FallbackValue=White}" />
                                                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.AheadPanel.BackgroundColor, FallbackValue=#303030}" />
                                                <!--<Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.AheadPanel.BorderThickness, FallbackValue=2}" />
                                                <Setter Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.AheadPanel.BorderCornerRadius, FallbackValue=0}" />-->
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsNewGoldSplit}" Value="False" />
                                                    <Condition Binding="{Binding IsAheadOfPb}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.BehindPanel.BorderColor, FallbackValue=White}" />
                                                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.BehindPanel.BackgroundColor, FallbackValue=#303030}" />
                                                <!--<Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.BehindPanel.BorderThickness, FallbackValue=2}" />
                                                <Setter Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.BehindPanel.BorderCornerRadius, FallbackValue=0}" />-->
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Grid>
                                    <Grid.Resources>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource MainText}">
                                            <Style.Triggers>
                                                <DataTrigger Value="True">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{StaticResource ObjectEqualityConv}">
                                                            <Binding />
                                                            <Binding RelativeSource="{RelativeSource AncestorType=Window, Mode=FindAncestor}" Path="DataContext.CurrentSplitRow" />
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>

                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.CurrentSplitPanel.TextColor, FallbackValue=White}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsNewGoldSplit}" Value="True">
                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.GoldPanel.TextColor, FallbackValue=White}" />
                                                </DataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsNewGoldSplit}" Value="False" />
                                                        <Condition Binding="{Binding IsAheadOfPb}" Value="True" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.AheadPanel.TextColor, FallbackValue=White}" />
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsNewGoldSplit}" Value="False" />
                                                        <Condition Binding="{Binding IsAheadOfPb}" Value="False" />
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.BehindPanel.TextColor, FallbackValue=White}" />
                                                </MultiDataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Column="0" Margin="3,1" TextAlignment="Left" VerticalAlignment="Center"
                                       Text="{Binding Name}" />

                                    <TextBlock Grid.Column="1" Margin="3,1" TextAlignment="Right" VerticalAlignment="Center"
                                       Text="{Binding Display}" />
                                </Grid>
                            </Border>

                            <Border Grid.Column="1" Margin="1">
                                <Border.Style>
                                    <Style TargetType="Border" BasedOn="{StaticResource BorderStyle}">
                                        <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.GoldPanel.BorderColor, FallbackValue=White}" />
                                        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.GoldPanel.BackgroundColor, FallbackValue=#303030}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.ShowGoldSplits}" Value="false">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.IsCurrentRunStarted}" Value="true">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <TextBlock Margin="3,1" TextAlignment="Center" VerticalAlignment="Center" Text="{Binding GoldDisplay}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource MainText}">
                                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.GoldPanel.TextColor, FallbackValue=White}" />
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Border>
                        </Grid>

                    </DataTemplate>
                </lview:SplitViewer.SplitTemplate>

                <lview:SplitViewer.SeparatorContent>
                    <!--<Rectangle Height="5" Margin="6,1">
                    <Rectangle.Fill>
                        <VisualBrush Stretch="Uniform" Viewport="0,0,7,5" ViewportUnits="Absolute" TileMode="Tile">
                            <VisualBrush.Visual>
                                <Polygon Points="1,0 5,0 3,4" Fill="White" />
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Rectangle.Fill>
                </Rectangle>-->
                    <Border Margin="6,1" Height="3" SnapsToDevicePixels="True"
                            Background="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.DisplaySettingsViewModel.SelectedDisplayTemplate.DefaultPanel.BorderColor, FallbackValue=White}"/>
                </lview:SplitViewer.SeparatorContent>
            </lview:SplitViewer>

            <TextBlock Grid.Row="2" Margin="6,2,6,3" TextAlignment="Right" VerticalAlignment="Center" 
                       Foreground="{Binding DisplaySettingsViewModel.SelectedDisplayTemplate.TimerColor, FallbackValue=White}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock" BasedOn="{StaticResource TimerText}">
                        <Setter Property="Text" Value="{Binding LiveTimer.OverrideTimeDisplay}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding LiveTimer.OverrideTimeDisplay}" Value="{x:Null}">
                                <Setter Property="Text" Value="{Binding LiveTimer.DisplayTimer}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <Grid Grid.Row="3" Margin="3,3,3,6">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0" Margin="3,0,3,0" Style="{StaticResource BorderStyle}">
                    <TextBlock Margin="3,1" HorizontalAlignment="Center" TextAlignment="Center" VerticalAlignment="Center"
                           Text="{Binding PreviousSplitRow.PbOffsetDisplay}" Style="{StaticResource MainText}" />
                </Border>

                <Border Grid.Column="1" Margin="3,0,3,0" Style="{StaticResource BorderStyle}"
                        BorderBrush="{Binding DisplaySettingsViewModel.SelectedDisplayTemplate.GoldPanel.BorderColor}"
                        Background="{Binding DisplaySettingsViewModel.SelectedDisplayTemplate.GoldPanel.BackgroundColor}">
                    <TextBlock Margin="3,1" HorizontalAlignment="Center" TextAlignment="Center" VerticalAlignment="Center"
                               Text="{Binding PreviousSplitRow.GoldOffsetDisplay}" Style="{StaticResource MainText}"
                               Foreground="{Binding DisplaySettingsViewModel.SelectedDisplayTemplate.GoldPanel.TextColor}" />
                </Border>

                <Border Grid.Column="2" Margin="3,0,3,0" Visibility="Collapsed" Style="{StaticResource BorderStyle}">
                    <TextBlock Margin="3,1" HorizontalAlignment="Center" TextAlignment="Center" VerticalAlignment="Center"
                           Text="{Binding CurrentFile.PersonalBestDate, FallbackValue=N/A, StringFormat={}{0:d}}" Style="{StaticResource MainText}" />
                </Border>
            </Grid>
        </Grid>

        <!-- Resize Popup -->
        <Grid Background="#80000000" Visibility="{Binding IsResizing, Converter={StaticResource BoolToVisConv}}">
            <DockPanel VerticalAlignment="Bottom" HorizontalAlignment="Right">
                <Button Margin="10,10,5,10" Height="25" Width="25" Command="{Binding AcceptResizeCommand}">
                    <Button.Template>
                        <ControlTemplate>
                            <Rectangle>
                                <Rectangle.Style>
                                    <Style TargetType="Rectangle">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button, Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                                                <Setter Property="Effect">
                                                    <Setter.Value>
                                                        <DropShadowEffect BlurRadius="7" Color="Lime" ShadowDepth="4" />
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>

                                <Rectangle.Fill>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <Border CornerRadius="3" Height="25" Width="25" Background="Black" BorderBrush="Lime" BorderThickness="2">
                                                <Viewbox Stretch="Uniform">
                                                    <TextBlock Foreground="Lime" FontWeight="Bold" Text="✓" TextAlignment="Center" />
                                                </Viewbox>
                                            </Border>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                <Button Margin="5,10,10,10" Height="25" Width="25" Command="{Binding CancelResizeCommand}">
                    <Button.Template>
                        <ControlTemplate>
                            <Rectangle>
                                <Rectangle.Style>
                                    <Style TargetType="Rectangle">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button, Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                                                <Setter Property="Effect">
                                                    <Setter.Value>
                                                        <DropShadowEffect BlurRadius="7" Color="Red" ShadowDepth="4" />
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                                
                                <Rectangle.Fill>
                                    <VisualBrush>
                                        <VisualBrush.Visual>
                                            <Border CornerRadius="3" Height="25" Width="25" Background="Black" BorderBrush="Red" BorderThickness="2">
                                                <Viewbox Stretch="Uniform">
                                                    <TextBlock Foreground="Red" FontWeight="Bold" Text="X" TextAlignment="Center" />
                                                </Viewbox>
                                            </Border>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                
            </DockPanel>
        </Grid>
    </Grid>
</Window>
